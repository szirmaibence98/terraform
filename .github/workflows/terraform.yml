name: 'Terraform Azure'

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  terraform-plan-and-apply:
    name: 'Terraform Plan and Apply'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }} 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve

  deploy-to-staging:
    needs: terraform-plan-and-apply
    runs-on: ubuntu-latest
    environment: 
      name: staging
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Staging
        run: echo "Deploying to Staging"
        # Replace this echo command with your actual deployment command if necessary

  deploy-to-production:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    environment: 
      name: production
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Production
        run: echo "Deploying to Production"
        # Replace this echo command with your actual deployment command if necessary
