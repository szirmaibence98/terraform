name: 'Terraform Azure'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


env:
  TF_ENV: dev

jobs:
  terraform-plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    outputs:
      plan-file: ${{ steps.set-plan-file.outputs.plan-file }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_ACCESS_KEY }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Terraform Init with Dynamic Backend Config
      run: |
        terraform init \
          -backend-config="access_key=${{ secrets.ARM_ACCESS_KEY }}" \
          -backend-config="container_name=statefiles" \
          -backend-config="key=${{ env.TF_ENV }}-terraform.tfstate" \
          -var="tenant_id=${{ env.ARM_TENANT_ID }}"

    - name: Set Plan File Name
      id: set-plan-file
      run: echo "plan-file=planfile-${{ env.TF_ENV }}.tfplan" >> $GITHUB_OUTPUT

    - name: Terraform Plan
      run: terraform plan -var-file=${{ env.TF_ENV }}.tfvar -out=${{ steps.set-plan-file.outputs.plan-file }}

    - name: Upload Terraform Plan as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: terraform-plan-${{ env.TF_ENV }}
        path: ${{ steps.set-plan-file.outputs.plan-file }}

  terraform-apply:
    name: 'Terraform Apply'
    needs: terraform-plan
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Ensure apply only runs on push to main branch
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Terraform Plan
      uses: actions/download-artifact@v2
      with:
        name: terraform-plan-${{ env.TF_ENV }}
        path: .

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: latest

    - name: Terraform Init with Dynamic Backend Config
    run: |
      terraform init \
        -backend-config="access_key=${{ secrets.ARM_ACCESS_KEY }}" \
        -backend-config="container_name=statefiles" \
        -backend-config="key=${{ env.TF_ENV }}-terraform.tfstate" \
        -var="tenant_id=${{ env.ARM_TENANT_ID }}"

    - name: Terraform Apply
      run: terraform apply "planfile-${{ env.TF_ENV }}.tfplan"
